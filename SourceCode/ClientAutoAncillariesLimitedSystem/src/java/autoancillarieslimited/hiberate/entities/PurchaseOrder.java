package autoancillarieslimited.hiberate.entities;
// Generated Jul 8, 2014 9:56:00 PM by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * PurchaseOrder generated by hbm2java
 */
public class PurchaseOrder implements java.io.Serializable {

    private int id;
    private WareHouses wareHouses;
    private Date dateOrder;
    private Integer idCustomer;
    private Integer status;
    private Set<ItemOrder> itemOrders = new HashSet(0);

    public PurchaseOrder() {
    }

    public PurchaseOrder(int id) {
        this.id = id;
    }

    public PurchaseOrder(int id, WareHouses wareHouses, Date dateOrder, Integer idCustomer, Integer status, Set<ItemOrder> itemOrders) {
        this.id = id;
        this.wareHouses = wareHouses;
        this.dateOrder = dateOrder;
        this.idCustomer = idCustomer;
        this.status = status;
        this.itemOrders = itemOrders;
    }

    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public WareHouses getWareHouses() {
        return this.wareHouses;
    }

    public void setWareHouses(WareHouses wareHouses) {
        this.wareHouses = wareHouses;
    }

    public Date getDateOrder() {
        return this.dateOrder;
    }

    public void setDateOrder(Date dateOrder) {
        this.dateOrder = dateOrder;
    }

    public Integer getIdCustomer() {
        return this.idCustomer;
    }

    public void setIdCustomer(Integer idCustomer) {
        this.idCustomer = idCustomer;
    }

    public Integer getStatus() {
        return this.status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public Set getItemOrders() {
        return this.itemOrders;
    }

    public void setItemOrders(Set itemOrders) {
        this.itemOrders = itemOrders;
    }

    private double totalPrice;

    public double getTotalPrice() {
        totalPrice = 0;
        System.out.println(itemOrders.size() + "AAAAAAAAAAAAAAAAAAAAAA");
        for (ItemOrder io : itemOrders) {
            totalPrice += io.getItem().getPrice();
        }
        return totalPrice;
    }

    private int quantity;

    public int getQuantity() {
        return itemOrders.size();
    }
    private String statusString;

    public String getStatusString() {
        statusString = "";
        switch (getStatus()) {
            case 0:
                statusString = "";
                break;
            case 1:
                break;
            case 2:
                break;
            default:
                break;
        }
        return statusString;
    }

}
